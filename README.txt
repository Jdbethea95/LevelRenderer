
-----------------------------------------------------------------------------------------------
EXE CONTROLS:

MOVEMENT
Movement follows the traditional WASD Format with the 
mouse X-axis and Y-Axis controlling rotation of the camera.

W – forward, S – Backwards, A – Left , D – Right.

CAMERAS:
Cameras can be changed between by using the number keys 1,2,3,4.

1-3: Static Camera positions
4: Motion Camera.

LEVELS:
Levels can be switched using keys 6 and 7.

6: Loads you into an additional scene
7: Loads the starting Scene

NOTE# Opted for the key call over the dialog
-----------------------------------------------------------------------------------------------

FEATURES
1.All core features are present within this project.
2.Hot-swapping levels is present within this project with the exception of the dialog.
3.Multiple Cameras are present in this project along with a split-screen camera used with a    
  Geometry Shader.
5.Renderer data is fully instanced using Data Oriented Rendering. 
6.A Geometry Shader was used in this project to aid the split-screen effect.
-----------------------------------------------------------------------------------------------

FOLDER INFORMATION

Vertex and Pixel Shaders are located inside the Shaders folder while the Geometry shader is located inside the release folder.


List of Scripts in the Main Folder
Helper.h
load_data_oriented.h  - this file was provided but WAS altered/added to.
main.cpp 		    - this file was provided but WAS altered/added to.
renderer.h 		    - this file was provided but WAS altered/added to.
FileIntoString.h 	    - this file was provided and NOT altered/added to.
h2bParser.h		    - this file was provided and NOT altered/added to.


The Rubric is present in the main folder now labels Progress_Tracking_Rubric.
MyGameLevel and OtherLevel are the txt files generated by the python script from blender.

The CMakeLists is present in the main folder. This project was built on assignment 2, so the CMakeLists.txt present is also from assignment 2. The CmakeLists.txt was altered to include
the additional scripts and no longer include the FSlogo.h. Note the GS shader is present within the release folder and was not added to the cmake list as of yet.

FullSail_items folder contains the documentation provided with in the projects.
They have been moved to this folder for ease of navigation of the files.

The gateware-main folder is in the main folder as it was present within the project folder
So the executable inside the release folder can run.

OBJ_FILE folder holds all the obj files used in the two levels.
Models folder holds the h2b files created from the obj files using the provided tools.
Release folder holds the executable and the needed files to run.

NOTE# the folders Shaders, Models, gateware-main and the files MyGameLevel, and OtherLevel are required to run executable inside the Release folder. The GS Shader must be in the Release folder for the executable to run.
-----------------------------------------------------------------------------------------------

